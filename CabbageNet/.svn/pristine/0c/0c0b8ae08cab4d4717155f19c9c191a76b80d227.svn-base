//
//  MyFollowViewController.m
//  CabbageNet
//
//  Created by xiang fu on 2017/8/23.
//  Copyright © 2017年 MacAir. All rights reserved.
//

#import "MyFollowViewController.h"
#import "SignListViewController.h"
#import "HotGoodsCell.h"
#import "GoLinkWebViewController.h"
#import "DetailInfoViewController.h"

@interface MyFollowViewController ()

@property (weak, nonatomic) IBOutlet UICollectionView *myCollectionView;
@property (nonatomic , strong)NSMutableArray *array;

@end

@implementation MyFollowViewController{
    NSInteger _curPage;
    BOOL _notRefresh;
}

- (NSMutableArray *)array{
    if (!_array) {
        _array = [NSMutableArray array];
    }
    return _array;
}

- (void)viewWillAppear:(BOOL)animated{
    if (!_notRefresh) {
       [self.myCollectionView.mj_header beginRefreshing];
    }
    _notRefresh = NO;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    UIButton *rightBtn = [[UIButton alloc] initWithFrame: CGRectMake(0, 0, 44, 44)];
    [rightBtn setImage:[UIImage imageNamed:@"关注设置"]  forState:UIControlStateNormal];
    rightBtn.imageEdgeInsets = UIEdgeInsetsMake(12, 24, 12, 0);
    [rightBtn addTarget:self action:@selector(rightBtnClick) forControlEvents:UIControlEventTouchUpInside];
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:rightBtn];
    _curPage = 1;
    
    self.myCollectionView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        _curPage = 1;
        [self requestFollowData];
    }];
    self.myCollectionView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        _curPage ++;
        [self requestFollowData];
    }];
}

- (void)rightBtnClick{
    SignListViewController *controller = [[UIStoryboard storyboardWithName:@"Main" bundle:nil] instantiateViewControllerWithIdentifier:@"signListViewController"];
    [self.navigationController pushViewController:controller animated:YES];
}

#pragma mark -- 请求关注列表
- (void)requestFollowData{
    
    NSMutableDictionary * infoDic = [[NSMutableDictionary alloc]init];
    setDickeyobj(infoDic, @"notify_tag_byuser", @"api");
    UserInfoModel *model = [UserInfoModel sharedUserData];
    setDickeyobj(infoDic, model.userid, @"userid");
    NSMutableDictionary * param = [[NSMutableDictionary alloc]init];
    setDickeyobj(param, infoDic, @"reqBody");
    [CKHttpCommunicate createRequest:HTTP_USER_API WithParam:param withMethod:POST success:^(id result) {
        if (_curPage == 1) {
            [self.array removeAllObjects];
            [self.myCollectionView reloadData];
        }
        NSLog(@"%@",result[@"data"]);
        if (SUCCESS_REQUEST(result)) {
            NSString *followStr = @"";
            for (NSDictionary *dic in result[@"data"]) {
                if (followStr.length) {
                    followStr = [NSString stringWithFormat:@"%@|%@", followStr, dic[@"tag"]];
                }else{
                    followStr = dic[@"tag"];
                }
                
            }
            if (!followStr.length) {
                followStr = [NSMutableString stringWithString:@"|"];
            }
            [self requestDate:followStr];
        }else{
            [self requestDate:@""];
            [self.myCollectionView.mj_header endRefreshing];
            [self.myCollectionView.mj_footer endRefreshing];
            [MBProgressHUD showError:result[@"msg"] toView:nil];
        }
    } failure:^(NSError *erro) {
        [self.myCollectionView.mj_header endRefreshing];
        [self.myCollectionView.mj_footer endRefreshing];
        NSLog(@"%@",erro);
    } showHUD:nil];
}

#pragma mark -- 请求数据列表
- (void)requestDate:(NSString *)followStr{
    
    NSMutableDictionary * infoDic = [[NSMutableDictionary alloc]init];
    
    setDickeyobj(infoDic, @"shoplist_g", @"api");
    NSString *pageStr = [NSString stringWithFormat:@"%ld",_curPage];
    setDickeyobj(infoDic, pageStr , @"page");
    if (followStr.length)setDickeyobj(infoDic, followStr, @"key");

    NSMutableDictionary * param = [[NSMutableDictionary alloc]init];
    setDickeyobj(param, infoDic, @"reqBody");
    [CKHttpCommunicate createRequest:HTTP_SHOP_API WithParam:param withMethod:POST success:^(id result) {
        [self.myCollectionView.mj_header endRefreshing];
        [self.myCollectionView.mj_footer endRefreshing];
        
        if (SUCCESS_REQUEST(result)) {
            for (NSDictionary *dic in result[@"data"]) {
                DiscountModel *model = [[DiscountModel alloc] init];
                [model mj_setKeyValues:dic];
                [self.array addObject:model];
            }
            [self.myCollectionView reloadData];
            
        }else{
            [MBProgressHUD showError:result[@"msg"] toView:nil];
        }
        
    } failure:^(NSError *erro) {
        [self.myCollectionView.mj_header endRefreshing];
        [self.myCollectionView.mj_footer endRefreshing];
        [self.array removeAllObjects];
        [self.myCollectionView reloadData];
        NSLog(@"%@",erro);
    } showHUD:nil];
    
}

#pragma  mark -- collectionView delegate
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView{
    return 1;
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    return self.array.count;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    
    HotGoodsCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"hotGoodsCell" forIndexPath:indexPath];
    DiscountModel * model = self.array[indexPath.row];
    cell.model = model;
    cell.goLinkBlock = ^{
        _notRefresh  = YES;
        GoLinkWebViewController *controller = [[UIStoryboard storyboardWithName:@"Main" bundle:nil] instantiateViewControllerWithIdentifier:@"goLinkWebViewController"];
        controller.webUrl = model.go_link[@"link"];
        controller.title = @"返回白菜哦";
        [self.navigationController pushViewController:controller animated:YES];
    };
    return cell;
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath{
    return CGSizeMake(mScreenWidth, 125);
}

//这个是两行cell之间的间距（上下行cell的间距）
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section{
    return 5;
}

//两个cell之间的间距（同一行的cell的间距）
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section{
    return 0;
}

- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section {
    return UIEdgeInsetsMake(5, 0, 0, 0);
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
    _notRefresh = YES;
    DetailInfoViewController *controller = [[UIStoryboard storyboardWithName:@"Main" bundle:nil] instantiateViewControllerWithIdentifier:@"detailInfoViewController"];
    DiscountModel *model = self.array[indexPath.row];
    controller.shopid = model.shopid;
    [self.navigationController pushViewController:controller animated:YES];
}

@end
